"""Add time and venue to games table

Revision ID: 055a4027382c
Revises: a20ac14837d4
Create Date: 2025-08-09 18:11:03.854597

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '055a4027382c'
down_revision: Union[str, Sequence[str], None] = 'a20ac14837d4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_scraped_stats_id'), table_name='scraped_stats')
    op.drop_table('scraped_stats')
    op.add_column('games', sa.Column('time', sa.String(), nullable=True))
    op.add_column('games', sa.Column('venue', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('games', 'venue')
    op.drop_column('games', 'time')
    op.create_table('scraped_stats',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('url', sa.VARCHAR(), nullable=False),
    sa.Column('game_id', sa.INTEGER(), nullable=True),
    sa.Column('scraped_at', sa.DATETIME(), nullable=True),
    sa.Column('verified_at', sa.DATETIME(), nullable=True),
    sa.Column('verified_by', sa.INTEGER(), nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), nullable=True),
    sa.Column('is_rejected', sa.BOOLEAN(), nullable=True),
    sa.Column('rejection_reason', sa.TEXT(), nullable=True),
    sa.Column('raw_data', sqlite.JSON(), nullable=True),
    sa.Column('player_stats_data', sqlite.JSON(), nullable=True),
    sa.Column('cookie_used', sa.VARCHAR(), nullable=True),
    sa.Column('scrape_status', sa.VARCHAR(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scraped_stats_id'), 'scraped_stats', ['id'], unique=False)
    # ### end Alembic commands ###
